<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) FuseSource, Inc.
  ~ http://fusesource.com
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">

    <!-- lets configure the audit notifier to the audit endpoint, vm:audit -->
	<bean class="org.fusesource.bai.event.AuditEventNotifier">
		<property name="endpointUri" value="vm:audit?waitForTaskToComplete=Never" />
		<property name="sendingRegex">
			<list value-type="java.lang.String">
				<value>.*</value>
			</list>
		</property>
		<property name="sentRegex">
			<list value-type="java.lang.String">
				<value>.*</value>
			</list>
		</property>
	</bean>

    <!--- MongoDb back end for asynchronously consuming audit events from vm:audit -->
    <bean class="org.fusesource.bai.backend.mongo.MongoDBBackend" init-method="init" id="mongoBackend">
        <!-- lets set the expression used to store the payload -->
        <property name="storeBodyExpression">
            <bean class="org.fusesource.bai.ExpressionFactoryBean">
                <property name="language" value="simple"/>
                <property name="expression" value="header.foo"/>
            </bean>
        </property>

   		<property name="mongo">
   			<bean class="com.mongodb.Mongo" />
   		</property>
   		<property name="dbname" value="bai" />
   		<property name="context" ref="mongoDbAuditContext" />
   	</bean>

    <!--
        TODO this separate camel context will not be necessary soon in Camel 2.10 as we'll be able to use @Consume
        on the above bean and use a property to specify the "vm:audit" URI
    -->
    <camelContext id="mongoDbAuditContext"
   				  useBreadcrumb="true"
   				  xmlns="http://camel.apache.org/schema/spring">
   		<route>
   			<from uri="vm:audit?concurrentConsumers=1" />
   			<bean ref="mongoBackend" method="audit" />
   		</route>
   	</camelContext>



    <!-- Camel route to be audited -->
  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <route>
      <from uri="direct:start"/>
      <filter>
        <xpath>$foo = 'bar'</xpath>
        <to uri="mock:result"/>
      </filter>
    </route>
  </camelContext>

</beans>