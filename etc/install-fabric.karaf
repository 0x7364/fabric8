shell:source mvn:org.fusesource.fabric/fabric-distro/${project.version}/karaf/wait-for-service
shell:source mvn:org.fusesource.fabric/fabric-distro/${project.version}/karaf/add-scala-tools-repo

echo Add fabric features
features:addurl mvn:org.fusesource.fabric/fabric-distro/${project.version}/xml/features

echo Install fabric commands

# -----------------------------------------------
# TODO - Remove this work-around that allows installation into FUSE ESB 4.4.0-fuse-00-43
features:install fabric-zookeeper
wait-for-service "(objectClass=org.linkedin.zookeeper.client.IZKClient)"
features:install fabric-maven-proxy
osgi:install -s mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jsch/${jsch-smx-version}
osgi:install -s mvn:org.codehaus.jackson/jackson-core-asl/${jackson-version}
osgi:install -s mvn:org.codehaus.jackson/jackson-mapper-asl/${jackson-version}
osgi:install -s mvn:com.weiglewilczek.scala-lang-osgi/scala-library/${scala-osgi-version}
osgi:install -s mvn:org.fusesource.fabric/fabric-core/${project.version}
# -----------------------------------------------

features:install fabric-core

features:install fabric-commands
wait-for-command fabric zk-cluster

features:install fabric-jaas
wait-for-service  "(&(objectClass=org.apache.karaf.jaas.config.JaasRealm)(org.apache.karaf.jaas.module=zookeeper))"

features:install insight-elasticsearch
features:install insight-log

# join existing cluster as root node (if first param is set - host:port)
# or create a new one
 if {$1} {
    echo "Joining cluster " $1
    shell:sleep 2000
    fabric:join-cluster $1
    #config:edit org.fusesource.fabric.zookeeper
    #config:propset zookeeper.url $1
    #config:update
    #shell:sleep 2000
    #zk:create /fabric/configs/agents/$APPLICATION base
    #zk:create /fabric/configs/versions/base/agents/$APPLICATION default
} {
    echo Creating initial ZooKeeper cluster
    fabric:zk-cluster --clean
    fabric:zk-cluster $APPLICATION
}



