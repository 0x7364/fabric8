<!--
  Copyright (C) FuseSource, Inc.
  http://fusesource.com

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0">

    <reference id="configAdmin"  interface="org.osgi.service.cm.ConfigurationAdmin"/>

    <!-- Zookeeper client -->
    <bean id="zkClient" class="org.fusesource.fabric.zookeeper.internal.OsgiZkClient" init-method="init" destroy-method="destroy">
        <property name="bundleContext" ref="blueprintBundleContext" />
        <property name="configurationAdmin" ref="configAdmin" />
    </bean>
    <service ref="zkClient">
        <interfaces>
            <value>org.fusesource.fabric.zookeeper.IZKClient</value>
            <value>org.linkedin.zookeeper.client.IZKClient</value>
        </interfaces>
    </service>

    <!-- ZooKeeper url handler -->
    <bean id="urlHandler" class="org.fusesource.fabric.zookeeper.internal.ZkUrlHandler">
        <argument ref="zkClient" />
    </bean>
    <service ref="urlHandler" interface="org.osgi.service.url.URLStreamHandlerService">
        <service-properties>
            <entry key="url.handler.protocol" value="zk" />
        </service-properties>
    </service>
    
    <!-- ZooKeeper client lifecycle listeners -->
    <reference-list interface="org.linkedin.zookeeper.client.LifecycleListener" availability="optional">
        <reference-listener ref="zkClient" bind-method="registerListener" unbind-method="removeListener"/>
    </reference-list>

    <!-- The karaf container registration --> 
    <bean id="karafContainerRegistration" class="org.fusesource.fabric.zookeeper.internal.KarafContainerRegistration" destroy-method="destroy" depends-on="zkServerFactory">
        <property name="configurationAdmin" ref="configAdmin" />
        <property name="bundleContext" ref="blueprintBundleContext" />
        <property name="zooKeeper" ref="zkClient" />
    </bean>
    <service ref="karafContainerRegistration" interface="org.linkedin.zookeeper.client.LifecycleListener" />
    <reference interface="javax.management.MBeanServer">
        <reference-listener ref="karafContainerRegistration" bind-method="registerMBeanServer" unbind-method="unregisterMBeanServer" />
    </reference>

    <!-- ZooKeeper server -->
    <bean id="zkServerFactory" class="org.fusesource.fabric.zookeeper.internal.ZKServerFactoryBean" destroy-method="destroy">
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>
    <service ref="zkServerFactory" interface="org.osgi.service.cm.ManagedServiceFactory">
        <service-properties>
            <entry key="service.pid" value="org.fusesource.fabric.zookeeper.server"/>
        </service-properties>
    </service>

</blueprint>