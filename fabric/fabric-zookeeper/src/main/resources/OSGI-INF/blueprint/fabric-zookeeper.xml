<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0">

    <ext:property-placeholder placeholder-prefix="\$[" placeholder-suffix="]">
        <ext:default-properties>
            <ext:property name="zookeeper.url" value=""/>
        </ext:default-properties>
    </ext:property-placeholder>

    <cm:property-placeholder persistent-id="org.fusesource.fabric.zookeeper" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="zookeeper.url" value="\$[zookeeper.url]"/>
            <cm:property name="zookeeper.timeout" value="10s"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="zkClientFactory" class="org.fusesource.fabric.zookeeper.internal.ZKClientFactoryBean" destroy-method="destroy" depends-on="zkServerFactory">
        <property name="connectString" value="${zookeeper.url}"/>
        <property name="timeoutText" value="${zookeeper.timeout}"/>
        <property name="listeners">
            <list>
                <ref component-id="karafAgentRegistration"/>
                <ref component-id="serviceRegistrationListener"/>
            </list>
        </property>
    </bean>

    <bean id="karafAgentRegistration" class="org.fusesource.fabric.zookeeper.internal.KarafAgentRegistration" destroy-method="destroy" depends-on="zkServerFactory">
        <property name="configurationAdmin">
            <reference interface="org.osgi.service.cm.ConfigurationAdmin"/>
        </property>
        <property name="bundleContext" ref="blueprintBundleContext" />
    </bean>

    <reference interface="javax.management.MBeanServer">
        <reference-listener ref="karafAgentRegistration" bind-method="registerMBeanServer" unbind-method="unregisterMBeanServer" />
    </reference>

    <bean id="serviceRegistrationListener" class="org.fusesource.fabric.zookeeper.internal.ServiceRegistrationListener" destroy-method="onDisconnected">
        <property name="zooKeeperUrl" value="${zookeeper.url}"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>

    <bean id="zkClient" factory-ref="zkClientFactory" factory-method="getObject"/>

    <bean id="zkServerFactory" class="org.fusesource.fabric.zookeeper.internal.ZKServerFactoryBean" destroy-method="destroy">
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>
    <service ref="zkServerFactory" interface="org.osgi.service.cm.ManagedServiceFactory">
        <service-properties>
            <entry key="service.pid" value="org.fusesource.fabric.zookeeper.server"/>
        </service-properties>
    </service>

    <reference-list interface="org.linkedin.zookeeper.client.LifecycleListener" availability="optional">
        <reference-listener ref="zkClientFactory" bind-method="registerListener" unbind-method="unregisterListener"/>
    </reference-list>

</blueprint>