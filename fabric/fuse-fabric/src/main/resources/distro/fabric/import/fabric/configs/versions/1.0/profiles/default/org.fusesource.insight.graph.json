{
  "queries" : [ {
    "name" : "jvm",
    "requests" : [ {
      "name": "memory",
      "obj" : "java.lang:type=Memory",
      "attrs" : [ "HeapMemoryUsage", "NonHeapMemoryUsage" ]
    },
    {
      "name": "pool",
      "obj" : "java.lang:type=MemoryPool,*",
      "attrs" : [ "Usage", "PeakUsage" ]
    },
    {
      "name": "threading",
      "obj" : "java.lang:type=Threading",
      "attrs" : [ "ThreadCount", "PeakThreadCount" ]
    },
    {
      "name": "gc",
      "obj" : "java.lang:type=GarbageCollector,*",
      "attrs" : [ "CollectionCount", "CollectionTime" ]
    },
    {
      "name": "buffer_pools",
      "obj" : "java.nio:type=BufferPool,*",
      "attrs" : [ "Count", "MemoryUsed", "TotalCapacity" ]
    } ]
  }, {
    "name": "zookeeper",
    "requests": [ {
      "name": "peer",
      "obj" : "org.apache.zookeeper:name0=*,name1=*,name2=*",
      "attrs": [ "AvgRequestLatency", "MaxRequestLatency", "MinRequestLatency", "PacketsReceived", "PacketsSent" ]
    }, {
      "name": "tree",
      "obj" : "org.apache.zookeeper:name3=InMemoryDataTree,*",
      "attrs": [ "NodeCount", "WatchCount" ]
    } ],
    "template": "@if{result.results['peer'].results.size() > 0}{ \"host\": \"${result.server.name}\", \"timestamp\": @{toJson(result.timestamp)}, \"type\": \"${result.results['peer'].results[0].objectName.getKeyProperty('name2')}\" @foreach{e : result.results['peer'].results[0].attrs.entrySet()}, \"${e.key}\": ${toJson(e.value)} @end{} @foreach{e : result.results['tree'].results[0].attrs.entrySet()}, \"${e.key}\": ${toJson(e.value)} @end{} }@end{}"
  } ]
}